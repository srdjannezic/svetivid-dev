<?php

/**
 * @file
 * This is the file description for Custom body class module.
 *
 * This file adds a fieldset to the node form and adds class/es to the
 * node page in body tag.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\node\NodeTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function custom_body_class_form_node_form_alter(&$form, &$form_state, $form_id) {
  $form['body_class_group'] = [
    '#type' => 'details',
    '#title' => t('Custom Body Class Settings'),
    '#description' => t('Assign CSS class/es to the body.'),
    '#group' => 'advanced',
    '#access' => TRUE,
    '#attributes' => ['class' => ['body-class-form']],
  ];

  $form['body_class']['#group'] = 'body_class_group';
  $form['specific_node_class']['#group'] = 'body_class_group';
  $form['#validate'][] = '_node_special_character_form_validate';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function custom_body_class_form_alter(&$form, FormStateInterface &$form_state, $form_id) {
    if ($form_id == 'node_type_edit_form') {
    /** @var \Drupal\node\NodeTypeInterface $type */
    $type = $form_state->getFormObject()->getEntity();
    $classes = $type->getThirdPartySetting('node_type_class', 'classes', '');
    $form['nodetype_body_class_group'] = [
            '#type' => 'details',
            '#title' => t('Custom Body Class Settings'),
            '#group' => 'additional_settings',
            '#attached' => [
              'library' => ['node_type_class/node_type_class.classes']
            ]
        ];
    $form['nodetype_body_class_group']['nodetype_class'] = [
          '#title' => t('CSS class(es)'),
          '#type' => 'textfield',
          '#description' => t('To add multiple classes, separate them with a space.'),
          '#default_value' => $classes,
    ];
    $form['#entity_builders'][] = 'custom_body_class_form_node_type_form_builder';
    $form['#validate'][] = '_node_special_character_form_validate';

    }
}

/**
 * Entity builder for the node type form with Custom Node type class.
 */
function custom_body_class_form_node_type_form_builder($entity_type, NodeTypeInterface $type, &$form, FormStateInterface $form_state) {
  $type->setThirdPartySetting('node_type_class', 'classes', $form_state->getValue('nodetype_class'));
}

/**
 * Implements hook_entity_base_field_info().
 */
function custom_body_class_entity_base_field_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'node') {
    $fields['body_class'] = BaseFieldDefinition::create('string')
      ->setLabel(t('Add CSS class(es)'))
      ->setDisplayOptions('form', [
        'type' => 'string_textfield',
        'weight' => 36,
      ])
      ->setDisplayConfigurable('form', TRUE);

    $fields['specific_node_class'] = BaseFieldDefinition::create('boolean')
      ->setLabel(t('If checked, add name of node type as class to body tag.'))
      ->setDisplayOptions('form', [
        'type' => 'boolean_checkbox',
        'weight' => 37,
      ])
      ->setDisplayConfigurable('form', TRUE);
    return $fields;
  }
}

/**
 * Implements hook_preprocess_html().
 */
function custom_body_class_preprocess_html(&$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');

  if ($node) {
    $custom_body_class = $node->get('body_class')->getValue();
    $specific_node_class = $node->get('specific_node_class')[0];
    if (!empty($custom_body_class) && isset($custom_body_class[0]) && isset($custom_body_class[0]['value'])) {
      $variables['attributes']['class'][] = $custom_body_class[0]['value'];
    }
    if (!empty($specific_node_class) && ($specific_node_class->getValue() !== NULL) && ($specific_node_class->getValue()['value'] == 1)) {
      $variables['attributes']['class'][] = $node->gettype();
    }
    $type = \Drupal::service('entity.manager')->getStorage('node_type')->load($node->getType());
    $classes = $type->getThirdPartySetting('node_type_class', 'classes', '');
    $variables['attributes']['class'][] = $classes;
  }
}

/**
 * Implements _node_special_character_form_validate().
 */
function _node_special_character_form_validate($form, $form_state) {
  if (preg_match('/[\'^Â£$%&*()}{@#~?><>,|=_+Â¬]/', $form_state->getValue('body_class')[0]['value'] )) {
    $form_state->setErrorByName('body_class', 'Special character in Custom Body Class');
  }
  if (preg_match('/[\'^Â£$%&*()}{@#~?><>,|=_+Â¬]/', $form_state->getValue('nodetype_class'))){
    $form_state->setErrorByName('nodetype_class', 'Special character in Custom Body Class Settings');
  }
}
